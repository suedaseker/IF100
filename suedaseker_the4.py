# -*- coding: utf-8 -*-
"""suedaseker_the4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WVQ4tTFCQbUPovbxNqk1SiA_05me0hdD
"""

def getPartyName(promptData, partyNames):
  if promptData == "first":
    party1 = input("Please enter the name of the first party: ")
    while party1[0].isalpha() == False or " " in party1:
      party1 = input("Invalid party name. Please enter again: ")

    party1 = party1.capitalize()
    partyNames.append(party1)

  elif promptData == "second":
    party2 = input("Please enter the name of the second party: ")
    while party2[0].isalpha() == False or " " in party2:
      party2 = input("Invalid party name. Please enter again: ")
    while party2.capitalize() in partyNames:
      party2 = input(party2.capitalize() + " already exists. Please enter again: ")
      while party2[0].isalpha() == False or " " in party2:
        party2 = input("Invalid party name. Please enter again: ")
    party2 = party2.capitalize()
    partyNames.append(party2)    

  elif promptData == "third":
    party3 = input("Please enter the name of the third party: ")
    while party3[0].isalpha() == False or " " in party3:
      party3 = input("Invalid party name. Please enter again: ")
    while party3.capitalize() in partyNames:
      party3 = input(party3.capitalize() + " already exists. Please enter again: ")
      while party3[0].isalpha() == False or " " in party3:
        party3 = input("Invalid party name. Please enter again: ")
    party3 = party3.capitalize()
    partyNames.append(party3)

  return partyNames

def getMenuOption():
  print("\nMenu:\n1. Enter results for a new city.\n2. Change results of a specific city.\n3. Show current results.\n4. Exit.\n")
  option = input("Select one of the options (1-4): ")
  while option != "1" and option != "2" and option != "3" and option != "4":
    option = input("You have entered an invalid input for menu selection. Please enter again: ")
  return option

def getNewResults(citiesAndResults):
  cityname = input("Please enter the name of the city: ")
  while cityname.isalpha() == False or " " in cityname:
    cityname = input("Invalid city name. Please enter again: ")
  cityname = cityname.capitalize()
  statement = True
  if len(citiesAndResults) == 0:
    score = input("Please enter results for " + cityname + ": ")
    citiesAndResults.append(cityname + "?" + score)
  else:
    for x in citiesAndResults:
      y = x.split("?")
      if cityname == y[0]:
        print("You cannot enter  " + cityname + "  since this city has already been entered. If you want you can update the results of this city by using the 2nd menu option.")
        statement = False
        
      else:
        statement = True
    while statement == True:
      score = input("Please enter results for " + cityname + ": ")
      citiesAndResults.append(cityname + "?" + score)
      break
  return citiesAndResults

def changeResults(citiesAndResults):
  if len(citiesAndResults) == 0:
    print("No information available yet...")
    
  else:
    cityname = input("Please enter the name of the city: ")
    while cityname[0].isalpha() == False or " " in cityname:
      cityname = input("Invalid city name. Please enter again: ")
    cityname = cityname.capitalize()
    idx = ""
    for x in citiesAndResults:
      y = x
      x = x.split("?")
      if cityname in x:
        score = input("Please enter results for " + cityname + ": ")
        idx = citiesAndResults.index(y)
    if idx != "":
      citiesAndResults[idx] = cityname + "?" + score
      return citiesAndResults
    else:
      print("You cannot change the result of  " + cityname + "  since no result has been entered for this city yet.")
      

def showResults(citiesAndResults, partyNames):
  if len(citiesAndResults) == 0:
    print("No information available yet...")
    
  else:
    for x in citiesAndResults:
      x = x.replace("?", "-")
      x = x.split("-")
      y = []
      for i in x[1:]:
        y.append(float(i))

        a = max(y)
        max_index = y.index(max(y))
        
      num = y.count(a)
      if num == 1:
        leading = partyNames[max_index]
        print(x[0], format(float(x[1]), ".1f"), format(float(x[2]), ".1f"), format(float(x[3]), ".1f"), "-->", leading, "is leading")
      
      elif num == 2:
        y.remove(a)
        leading1 = partyNames[max_index]
        newNames = []
        for element in partyNames:
          newNames.append(element)

        newNames.remove(leading1)
        
        max_index = y.index(max(y))
        leading2 = newNames[max_index]
        print(x[0], format(float(x[1]), ".1f"), format(float(x[2]), ".1f"), format(float(x[3]), ".1f"), "-->", leading1, leading2, "are leading")
      
      elif num == 3:
        print(x[0], format(float(x[1]), ".1f"), format(float(x[2]), ".1f"), format(float(x[3]), ".1f"), "-->", partyNames[0], partyNames[1], partyNames[2], "are leading")

#############################
## DO NOT MODIFY THIS CELL ##
## JUST RUN THIS WHEN YOU COMPLETE YOUR FUNCTIONS ##
#############################
####### MAIN PROGRAM ########
#############################

print("Welcome to this virtual local elections Python program.\n")

# get the names of the parties
partyNames = []                               # stores the valid party names
promptData = ["first", "second", "third"]
for i in range(3):
  getPartyName(promptData[i], partyNames)

# dataset variable initialization
citiesAndResults = []                         # stores the city-results information

# display the menu, get user's option, and process accordingly
option = getMenuOption()
while option != "4":
  if option == "1":
    getNewResults(citiesAndResults)           # function call to update citiesAndResults with a new city
  elif option == "2":
    changeResults(citiesAndResults)            # function call to update citiesAndResults for an existing city
  elif option == "3":
    showResults(citiesAndResults, partyNames) # function call to display current election results
  option = getMenuOption()

print("**********\nTerminating, good bye dear citizen!!! Do not forget to vote in elections :)")